[{"/home/jonathan/Documentos/weather/weather_front/src/index.js":"1","/home/jonathan/Documentos/weather/weather_front/src/pages/home/index.js":"2","/home/jonathan/Documentos/weather/weather_front/src/pages/detalhesTempo/index.js":"3","/home/jonathan/Documentos/weather/weather_front/src/components/layout/index.js":"4","/home/jonathan/Documentos/weather/weather_front/src/pages/historico/components/emptyHistory/index.js":"5","/home/jonathan/Documentos/weather/weather_front/src/pages/home/components/listWeather/index.js":"6","/home/jonathan/Documentos/weather/weather_front/src/components/layout/style.js":"7","/home/jonathan/Documentos/weather/weather_front/src/components/pagination/index.js":"8","/home/jonathan/Documentos/weather/weather_front/src/assets/imgs/arrows/rigthArrow.js":"9","/home/jonathan/Documentos/weather/weather_front/src/serviceWorker.js":"10","/home/jonathan/Documentos/weather/weather_front/src/pages/historico/index.js":"11","/home/jonathan/Documentos/weather/weather_front/src/pages/historico/components/contentHistory/index.js":"12","/home/jonathan/Documentos/weather/weather_front/src/constants/containers/index.js":"13","/home/jonathan/Documentos/weather/weather_front/src/components/button/index.js":"14","/home/jonathan/Documentos/weather/weather_front/src/assets/imgs/arrows/leftArrow.js":"15","/home/jonathan/Documentos/weather/weather_front/src/components/texts/index.js":"16","/home/jonathan/Documentos/weather/weather_front/src/components/sideMenus/index.js":"17"},{"size":887,"mtime":1612269505492,"results":"18","hashOfConfig":"19"},{"size":409,"mtime":1612259439474,"results":"20","hashOfConfig":"19"},{"size":4474,"mtime":1612259732546,"results":"21","hashOfConfig":"19"},{"size":511,"mtime":1612259798138,"results":"22","hashOfConfig":"19"},{"size":281,"mtime":1612259623156,"results":"23","hashOfConfig":"19"},{"size":3442,"mtime":1612259523203,"results":"24","hashOfConfig":"19"},{"size":567,"mtime":1612259804930,"results":"25","hashOfConfig":"19"},{"size":2988,"mtime":1612259852275,"results":"26","hashOfConfig":"19"},{"size":1398,"mtime":1612269537856,"results":"27","hashOfConfig":"19"},{"size":5185,"mtime":1612268986066,"results":"28","hashOfConfig":"19"},{"size":1058,"mtime":1612259561712,"results":"29","hashOfConfig":"19"},{"size":5695,"mtime":1612259604792,"results":"30","hashOfConfig":"19"},{"size":1623,"mtime":1612259747334,"results":"31","hashOfConfig":"19"},{"size":759,"mtime":1612259773330,"results":"32","hashOfConfig":"19"},{"size":1447,"mtime":1612269528140,"results":"33","hashOfConfig":"19"},{"size":992,"mtime":1612259938172,"results":"34","hashOfConfig":"19"},{"size":1461,"mtime":1612259925147,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1fe17nw",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jonathan/Documentos/weather/weather_front/src/index.js",[],["75","76","77","78","79","80"],"/home/jonathan/Documentos/weather/weather_front/src/pages/home/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/pages/detalhesTempo/index.js",["81"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styled from 'styled-components';\nimport Layout from '../../components/layout/index';\nimport { Text } from '../../components/texts/index';\nimport { historyPost } from '../../services/index';\n\nconst Card = styled.div`\n  background-color: var(--white);\n  border-radius: 10px;\n  width: 80%;\n  padding: 1%;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  @media screen and (max-width: 640px) {\n    width: 80%;\n  }\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  padding: 10px 0;\n\n  @media screen and (max-width: 640px) {\n    width: 50%;\n    font-size: 1.2em;\n    align-self: center;\n  }\n`;\n\nconst WeatherDetails = (props) => {\n  // eslint-disable-next-line react/destructuring-assignment\n  const weather = props.location.state.detail;\n\n  const value = {\n    city: weather.city,\n    description: weather.weather[0].description,\n    dt: weather.dt,\n    pressure: weather.pressure,\n    humidity: weather.humidity,\n    wind_speed: weather.wind_speed,\n    wind_deg: weather.wind_deg,\n    pop: weather.pop,\n    rain: weather.rain,\n    snow: weather.snow,\n    dayTemp: weather.temp.day,\n    minDayTemp: weather.temp.min,\n    maxDayTemp: weather.temp.max,\n    nightTemp: weather.temp.night,\n    dayFeel: weather.feels_like.day,\n    nightFeel: weather.feels_like.night,\n  };\n\n  const datePicker = (date) => {\n    const a = new Date(date * 1000);\n    const year = a.getFullYear();\n    const month = a.getMonth() + 1;\n    const day = a.getDate();\n    return `${day}/${month}/${year}`;\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  historyPost(value, (resp) => {\n    console.log('ok');\n  });\n\n  if (weather) {\n    return (\n      <Layout titlePage={`${weather.city} ${datePicker(weather.dt)}`}>\n\n        <Card>\n          <TextContainer style={{ justifyContent: 'center' }}>\n            <img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} style={{ width: '150px' }} />\n            <Text>{weather.weather[0].description}</Text>\n          </TextContainer>\n\n          <TextContainer>\n            <Text>\n              Probabilidade de Chuva:\n              {weather.pop}\n              %\n            </Text>\n            <Text>{weather.rain && `Quantidade de Chuva: ${weather.rain} mm`}</Text>\n          </TextContainer>\n\n          {weather.snow\n                        && (\n                        <TextContainer>\n                          <Text>\n                            Quantidade de Neve:\n                            {weather.snow}\n                            {' '}\n                            mm\n                          </Text>\n                        </TextContainer>\n                        )}\n\n          <TextContainer>\n            <Text>\n              Temperatura Min:\n              {weather.temp.min}\n              °C\n            </Text>\n            <Text>\n              Temperatura Max:\n              {weather.temp.max}\n              °C\n            </Text>\n          </TextContainer>\n          <TextContainer>\n            <Text>\n              Temperatura de Dia:\n              {weather.temp.day}\n              °C\n            </Text>\n            <Text>\n              Temperatura de Noite:\n              {weather.temp.night}\n              °C\n            </Text>\n          </TextContainer>\n\n          <TextContainer>\n            <Text>\n              Sensação Térmica de Dia:\n              {weather.feels_like.day}\n              °C\n            </Text>\n            <Text>\n              Sensação Térmica de Noite:\n              {weather.feels_like.night}\n              °C\n            </Text>\n          </TextContainer>\n\n          <TextContainer>\n            <Text>\n              Pressão:\n              {weather.pressure}\n              {' '}\n              hPa\n            </Text>\n            <Text>\n              Humidade:\n              {weather.humidity}\n              %\n            </Text>\n          </TextContainer>\n\n          <TextContainer>\n            <Text>\n              Velocidade do Vento:\n              {weather.wind_speed}\n              m/s\n            </Text>\n            <Text>\n              Direção do Vento:\n              {weather.wind_deg}\n              °\n            </Text>\n          </TextContainer>\n        </Card>\n      </Layout>\n    );\n  }\n  return <></>;\n};\n\nexport default WeatherDetails;\n",["82","83","84","85","86","87"],"/home/jonathan/Documentos/weather/weather_front/src/components/layout/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/pages/historico/components/emptyHistory/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/pages/home/components/listWeather/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/components/layout/style.js",[],"/home/jonathan/Documentos/weather/weather_front/src/components/pagination/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/assets/imgs/arrows/rigthArrow.js",[],"/home/jonathan/Documentos/weather/weather_front/src/serviceWorker.js",["88","89","90","91","92","93"],"/* eslint-disable no-param-reassign */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n",["94","95","96","97","98","99"],"/home/jonathan/Documentos/weather/weather_front/src/pages/historico/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/pages/historico/components/contentHistory/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/constants/containers/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/components/button/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/assets/imgs/arrows/leftArrow.js",[],"/home/jonathan/Documentos/weather/weather_front/src/components/texts/index.js",[],"/home/jonathan/Documentos/weather/weather_front/src/components/sideMenus/index.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":70,"column":5,"nodeType":"114","messageId":"115","endLine":70,"endColumn":16},{"ruleId":"100","replacedBy":"116"},{"ruleId":"102","replacedBy":"117"},{"ruleId":"104","replacedBy":"118"},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","replacedBy":"120"},{"ruleId":"110","replacedBy":"121"},{"ruleId":"112","severity":1,"message":"113","line":46,"column":11,"nodeType":"114","messageId":"115","endLine":46,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":74,"column":15,"nodeType":"114","messageId":"115","endLine":74,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":87,"column":15,"nodeType":"114","messageId":"115","endLine":87,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":99,"column":7,"nodeType":"114","messageId":"115","endLine":99,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":127,"column":7,"nodeType":"114","messageId":"115","endLine":127,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":140,"column":9,"nodeType":"114","messageId":"115","endLine":140,"endColumn":22},{"ruleId":"100","replacedBy":"122"},{"ruleId":"102","replacedBy":"123"},{"ruleId":"104","replacedBy":"124"},{"ruleId":"106","replacedBy":"125"},{"ruleId":"108","replacedBy":"126"},{"ruleId":"110","replacedBy":"127"},"lines-around-directive",["128"],"no-spaced-func",["129"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["128"],["129"],[],[],[],[],["128"],["129"],[],[],[],[],"padding-line-between-statements","func-call-spacing"]